plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'

    id 'org.jreleaser' version '1.15.0'
}

group = 'io.github.dyadyajora'
version = '0.0.2'

repositories {
    mavenCentral()
}

java {
    withSourcesJar()
    withJavadocJar()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

publishing {
    publications {
        myPub(MavenPublication) {
            from components.java
            pom {
                name = 'Gradle Publish Boilerplate'
                description = 'My boilerplate for publishing Java projects with Gradle'
                url = 'https://github.com/dyadyaJora/gradle-publish-boilerplate'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'dyadyaJora'
                        name = 'George'
                        email = 'idyadyajora@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/dyadyaJora/gradle-publish-boilerplate.git'
                    developerConnection = 'scm:git:ssh://github.com:dyadyaJora/gradle-publish-boilerplate.git'
                    url = 'https://github.com/dyadyaJora/gradle-publish-boilerplate'
                }
            }
        }
    }
    repositories {
        maven {
            name = "LocalMavenWithChecksums"
            url = uri(layout.buildDirectory.dir("staging-deploy"))
        }

        maven {
            name = "PreDeploy"
            url = uri(layout.buildDirectory.dir("pre-deploy"))
        }

        // Old accounts way
//        maven {
//            name = "OSSRH"
//            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
//
//            credentials {
//                username = findProperty("ossrhUsername") ?: System.getenv("OSSRH_USERNAME")
//                password = findProperty("ossrhPassword") ?: System.getenv("OSSRH_PASSWORD")
//            }
//        }
    }
}

signing {
    setRequired {
        gradle.taskGraph.allTasks.any { it.name.contains("LocalMavenWithChecksums") }
    }
    sign publishing.publications.myPub
}

jreleaser {
    project {
        copyright = 'jora.dev'
        description = 'Gradle Publish Boilerplate project setup'
    }
    signing {
        active = 'ALWAYS'
        armored = true
        mode = 'FILE'
        publicKey = 'public.key'
        secretKey = 'private.key'
    }
    deploy {
        maven {
            // New accounts way
            mavenCentral {
                sonatype {
                    active = 'ALWAYS'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    // Uncomment if you want to use environment variables directly instead of
                    // setting them in ~/.jrelease/config.properties
//                    username = findProperty("ossrhUsername") ?: System.getenv("OSSRH_USERNAME")
//                    password = findProperty("ossrhPassword") ?: System.getenv("OSSRH_PASSWORD")
                    stagingRepository('build/pre-deploy')
                }
            }
        }
    }
    release {
        github {
            enabled = false
        }
    }
}


//For generation of checksums in build/libs
//tasks.withType(Jar) { task ->
//    task.doLast {
//        ant.checksum algorithm: 'md5', file: it.archivePath
//        ant.checksum algorithm: 'sha1', file: it.archivePath
//    }
//}